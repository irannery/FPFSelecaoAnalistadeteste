# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestControleDosPaisTPLink():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_controleDosPaisTPLink(self):
    # Test name: ControleDosPaisTP-Link
    # Step # | name | target | value
    # 1 | open | https://emulator.tp-link.com/C50V4_BR_Emulator/Emulator/index.htm | 
    self.driver.get("https://emulator.tp-link.com/C50V4_BR_Emulator/Emulator/index.htm")
    # 2 | setWindowSize | 1054x808 | 
    self.driver.set_window_size(1054, 808)
    # 3 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 4 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 5 | click | css=#menu_pc > span | 
    self.driver.find_element(By.CSS_SELECTOR, "#menu_pc > span").click()
    # 6 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 7 | selectFrame | index=2 | 
    self.driver.switch_to.frame(2)
    # 8 | click | id=ParentCtr_en | 
    self.driver.find_element(By.ID, "ParentCtr_en").click()
    # 9 | click | id=parentMac | 
    self.driver.find_element(By.ID, "parentMac").click()
    # 10 | type | id=parentMac | 0A:00:27:00:00:11
    self.driver.find_element(By.ID, "parentMac").send_keys("0A:00:27:00:00:11")
    # 11 | click | id=mac1 | 
    self.driver.find_element(By.ID, "mac1").click()
    # 12 | type | id=mac1 | 0A:11:27:11:11:00
    self.driver.find_element(By.ID, "mac1").send_keys("0A:11:27:11:11:00")
    # 13 | click | id=weekDay | 
    self.driver.find_element(By.ID, "weekDay").click()
    # 14 | select | id=weekDay | label=Cada Semana
    dropdown = self.driver.find_element(By.ID, "weekDay")
    dropdown.find_element(By.XPATH, "//option[. = 'Cada Semana']").click()
    # 15 | click | id=weekDay | 
    self.driver.find_element(By.ID, "weekDay").click()
    # 16 | click | css=#week > p:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, "#week > p:nth-child(2)").click()
    # 17 | click | id=mon | 
    self.driver.find_element(By.ID, "mon").click()
    # 18 | click | id=tue | 
    self.driver.find_element(By.ID, "tue").click()
    # 19 | click | id=wed | 
    self.driver.find_element(By.ID, "wed").click()
    # 20 | click | id=thu | 
    self.driver.find_element(By.ID, "thu").click()
    # 21 | click | id=fri | 
    self.driver.find_element(By.ID, "fri").click()
    # 22 | click | id=timeS | 
    self.driver.find_element(By.ID, "timeS").click()
    # 23 | select | id=timeS | label=21:00
    dropdown = self.driver.find_element(By.ID, "timeS")
    dropdown.find_element(By.XPATH, "//option[. = '21:00']").click()
    # 24 | click | id=timeS | 
    self.driver.find_element(By.ID, "timeS").click()
    # 25 | click | id=timeE | 
    self.driver.find_element(By.ID, "timeE").click()
    # 26 | select | id=timeE | label=12:30
    dropdown = self.driver.find_element(By.ID, "timeE")
    dropdown.find_element(By.XPATH, "//option[. = '12:30']").click()
    # 27 | click | id=timeE | 
    self.driver.find_element(By.ID, "timeE").click()
    # 28 | click | css=.button:nth-child(4) | 
    self.driver.find_element(By.CSS_SELECTOR, ".button:nth-child(4)").click()
    # 29 | click | id=saveBtn | 
    self.driver.find_element(By.ID, "saveBtn").click()
  
